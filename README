环境和工具：
python3.6.1
Keras 2.1.5
scikit-learn 0.18.2
scipy 1.0.0
pandas 0.22.0
matplotlib 2.0.2
numpy 1.14.2

编辑工具:
sublime text 3

调试工具:pdb
pdb这个功能好牛啊，可以在命令行设置也可以在程序里用语句设置断点 命令行：$ python -m pdb 1.py 程序里： 引入pdb包 import pdb def main(): i, sum = 1, 0 for i in xrange(100): sum = sum + i pdb.set_trace() print sum if __name__ == '__main__': main() 命令 | 用途 break 或 b 设置断点 continue 或 c 继续执行程序 list 或 l 查看当前行的代码段 step 或 s 进入函数 return 或 r 执行代码直到从当前函数返回 exit 或 q 中止并退出 next 或 n 执行下一行 pp 打印变量的值 help 帮助
首先你选择运行的 py
python -m pdb myscript.py
(Pdb) 会自动停在第一行，等待调试,这时你可以看看 帮助
(Pdb) h
    说明下这几个关键 命令>断点设置
   (Pdb)b  10 #断点设置在本py的第10行
   或(Pdb)b  ots.py:20 #断点设置到 ots.py第20行
   删除断点（Pdb）b #查看断点编号
            (Pdb)cl 2 #删除第2个断点
>运行
    (Pdb)n #单步运行
    (Pdb)s #细点运行 也就是会下到，方法
    (Pdb)c #跳到下个断点
>查看
    (Pdb)p param #查看当前 变量值
    (Pdb)l #查看运行到某处代码
    (Pdb)a #查看全部栈内变量>如果是在 命令行里的调试为：
import pdb
def tt():
    pdb.set_trace()
    for i in range(1, 5):
        print i>>> tt()
#这里支持 n p c 而已
> <stdin>(3)tt()
(Pdb) n
--------------------------------------------------------
附一些有用的调试命令:
w(here) 显式当前堆栈结构。往下的是新的，就像X86构架中的那样。
d(own) 移向新的一帧
u(p) 移向旧的一帧
b(reak) [([filename:]lineno | function) [, condition] ]
如果没有指定文件名则使用当前文件
condition是一个字符串，必须等价于 true
The condition argument, if present, is a string which must
evaluate to true in order for the breakpoint to be honored.
tbreak [([filename:]lineno | function) [, condition] ]
临时的breakpoint
cl(ear) [bpnumber [bpnumber ...]]
空格进行分割，清除这些断点
disable bpnumber [bpnumber ...]
disable 断点，可以enable之后
ignore bpnumber count
设置某个断点的count，当count为0的时候断点状态为active，count不为0的时候每一次进入断点时候count自减
condition bpnumber condition
s(tep) 单步执行，步入
n(ext) 单步执行，步过函数
c(ont(inue)) 执行直到断点
l(ist) [first [,last]]
列出11行附近的代码
a(rgs)
打印出当前函数的参数
p expression
答应表达式的值
(!) statement
执行statement
whatis arg
答应 arg 的类型
q(uit)

书籍名称：Python数据分析与挖掘实战

注:借鉴了该书相关源代码,只用作个人学习使用

===============================================================

数据挖掘实战
1、电力窃漏电用户自动识别
	1、数据抽取 ---data_extract.py
		1、与窃漏电相关的原始数据主要有：用电负荷数据、终端报警数据、违约窃电处罚信息、用户档案资料
		2、数据来源:从营销系统抽取数据、从计量自动化系统抽取数据

	2、数据探索与预处理 ---data_pretreatment.py
		1、主要采用分布分析和周期性分析
		2、数据清洗:探索结果发现非居民用电量不可能存在窃漏电现象，过滤节假日数据
		3、缺失值处理:拉格朗日插值法处理缺失值
		    1、使用拉格朗日插值法进行插值，对n个点对(i,j)有多项式
		    y=a0+a1*x+a2*x^2+...+an-1*x^(n-1),带入n个点对，求解给定的x的y值
		4、数据变换:将不明显的特征规律重构成专家样本: 电量趋势下降指标、线损指标、告警类指标，这里暂时使用整理好的model.xls
	3、建模 ---data_model.py
		1、数据划分:对专家样本20%测试样本，80%训练样本，其中使用随机打乱函数来分配
		2、建立LM神经网络模型
		    1、创建Sequential模型
		    2、添加输入层，隐藏层，输出层
		    3、在隐藏层、输出层添加激活方法
		    4、编译模型，训练模型，保存模型(使用自带的方法)
		3、CART决策树
		    1、创建DecisionTreeClassifier模型
		    2、训练，保存(使用joblib库)
	4、模型评价 ---model_evaluate.py
	5、预测 ---data_predict.py

extract_1、汽车销售纳税偷漏税识别
	1、数据抽取
	2、数据探索与预处理
		1、拓展思考样本集中有14个输入属性和一个输出属性
		2、将分非数值型的属性值转换为数值型
	3、数据建模
	4、模型评价
	5、数据预测

2、航空公司客户价值分析
	1、数据抽取
	2、数据探索与预处理
		1、一般客户价值识别常用RFM模型:R(最近消费间隔时间),F(消费频率),M(消费金额)
		2、这里将客户关系长度L,消费时间间隔R,消费频率F,飞行里程数M,折扣系数的平均值C等5个特征值（LRFMC指标）
		3、利用聚类方法识别客户群
		4、探索发现数据存在缺失值，由于数据量大，丢弃这些数据
			1、丢弃票价为空的数据
			2、丢弃票价为0，平均折扣率不为0，总飞行数不为0的记录
			3、数据规约:选择指标规定的特征,FFP_DATE,LOAD_TIME,FLIGHT_COUNT,AVG_DISCOUNT,SEG_KM_SUM,LAST_TO_END
		5、数据变换：属性变换，数据标准化
			1、 L = LOAD_TIME - FFP_DATE
				R = LAST_TO_END
				F = FLIGHT_COUNT
				M = SEG_KM_SUM
				C = AVG_DISCOUNT
			2、这里使用标准差标准化
	3、数据建模
		1、客户聚类分群
			使用k-means聚类方法，聚成5类(分析确认)
		2、对客户群进行排名
	4、模型评价
	5、数据预测

extract_2、航空公司客户类型识别
	1、数据抽取
	2、数据探索与预处理
		1、客户类型定义为几类:
			1、老客户(飞行次数大于6次)
			2、已流失客户(第二次飞行次数比第一次飞行次数小于50%)
			3、准流失客户(50% ,90%之间)
			4、未流失客户(90%以上)
		2、类别分类:未流失、准流失、已流失(0,1,2)
		3、特征属性:会员卡级别、平均乘机时间间隔、平均折扣率、积分兑换次数、非乘机积分总和、单位里程票价(总票价/总里程数)、单位里程积分(总积分/总里程数)
	3、数据建模
		1、LM模型
		2、CART模型
		3、贝叶斯模型
	4、数据评价
	5、数据预测

3、中医证型关联规则挖掘